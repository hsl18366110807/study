先不说视频传输的过程。分析建立连接的过程。
客户端：socket(),connect(),recv();
服务端:  socket(),bind(),listen(),accept(),send();
分别调用以上函数来进行tcp连接的。
为什么会有套接字描述符？
现有文件描述符表，进程打开一个文件时，系统把一个指向此文件内部数据结构的指针写入文件描述符表，把表的索引返回给调用者。
相同的思想，进程也会获得一个套接字描述符表，存储指向套接字结构的指针。

WSAStartup函数  因为Windows要使用动态链接库，系统找到合适的动态链接库与它绑定。
                 第一个参数是Windows套接字的版本，第二个参数是操作系统返回单该Windows套接字的使用版本。
socket函数：主要创建套接字，用于网络通信。
           第一个参数是地址family参数，选择用Ipv4格式还是Ipv6格式。
           第二个参数是传输的是字节流还是数据报的格式。字节流是socket_stream
           第三个参数默认为0；如果选用socket_stream,默认选择tcp协议。
           返回值是一个套接字描述符。
bind函数          主要绑定本地的ip和端口号。
            第一个函数是生成的套接字。
            后面的是参数是端点地址结构(sockaddr_in)的地址，和大小。
listen函数       主要是把套接字变为被动模式。在系统中排队的传入的tcp连接数。
            第一个函数是生成的套接字。
            第二个函数tcp连接数。
accept        为每个新的连接请求创建新的套接字。服务器用新的连接使用该套接字，使用原来的套接字接受其他的连接请求。
                  一旦接受一个新的请求，服务器用新的套接字来传输数据。
              第一个参数是原来的套接字。
              第二个参数是sockaddr的地址
              第三个sockaddr的大小
send           新的套接字（要发往的套接字的描述符），要发送数据的地址，数据长度，控制传输的位标志。
                    send把要发送的数据复制到操作系统的内核缓冲区，使得网络传送数据时应用程序可以继续执行。
connect  创建套接字后，跟服务器建立一个活动连接。一旦建立连接，客户就可以用这个连接传送数据。
recv      套接字，缓冲区地址，缓冲区的长度，接收位标志。
closesocket    引用计数减一，最后释放。
WSACleanup释放所有数据结构和套接字的绑定